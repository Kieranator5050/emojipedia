{"version":3,"sources":["components/Entry.jsx","components/Emojipedia.jsx","apiKey.js","components/App.jsx","index.js"],"names":["Entry","props","className","role","aria-label","emoji","name","meaning","Emojipedia","useState","error","setError","isLoaded","setIsLoaded","items","setItems","useEffect","fetch","then","res","json","result","message","map","index","key","character","unicodeName","App","ReactDOM","render","document","getElementById"],"mappings":"mMAgBeA,MAdf,SAAeC,GACb,OACE,yBAAKC,UAAU,QACb,4BACE,0BAAMA,UAAU,QAAQC,KAAK,MAAMC,aAAW,gBAC3CH,EAAMI,OAET,8BAAOJ,EAAMK,OAEf,4BAAKL,EAAMM,WCwCDC,MA/ChB,WACI,MAA0BC,mBAAS,MAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,oBAAS,GAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAA0BJ,mBAAS,IAAnC,mBAAOK,EAAP,KAAcC,EAAd,KAuBA,OAlBAC,qBAAU,WACRC,MAAM,2CAAD,OCbI,6CDcNC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MACC,SAACG,GACCR,GAAY,GACZE,EAASM,MAKX,SAACX,GACCG,GAAY,GACZF,EAASD,QAGd,IAECA,EACK,uCAAaA,EAAMY,SAChBV,EAIR,wBAAIV,UAAU,cACTY,EAAMS,KAAI,SAAClB,EAAOmB,GACf,OACI,kBAAC,EAAD,CACAC,IAAKD,EACLnB,MAAOA,EAAMqB,UACbpB,KAAMD,EAAMsB,kBATnB,4CEjBEC,MAZf,WACE,OACE,6BACE,4BACE,6CAGF,kBAAC,EAAD,QCPNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.96d1142e.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Entry(props) {\r\n  return (\r\n    <div className=\"term\">\r\n      <dt>\r\n        <span className=\"emoji\" role=\"img\" aria-label=\"Tense Biceps\">\r\n          {props.emoji}\r\n        </span>\r\n        <span>{props.name}</span>\r\n      </dt>\r\n      <dd>{props.meaning}</dd>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Entry;\r\n","import React, {useState, useEffect} from \"react\";\r\nimport apiKey from \"../apiKey\";\r\nimport Entry from \"./Entry\";\r\n\r\nfunction Emojipedia() {\r\n    const [error, setError] = useState(null);\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const [items, setItems] = useState([]);\r\n  \r\n    // Note: the empty deps array [] means\r\n    // this useEffect will run once\r\n    // similar to componentDidMount()\r\n    useEffect(() => {\r\n      fetch(`https://emoji-api.com/emojis?access_key=${apiKey}`)\r\n        .then(res => res.json())\r\n        .then(\r\n          (result) => {\r\n            setIsLoaded(true);\r\n            setItems(result);\r\n          },\r\n          // Note: it's important to handle errors here\r\n          // instead of a catch() block so that we don't swallow\r\n          // exceptions from actual bugs in components.\r\n          (error) => {\r\n            setIsLoaded(true);\r\n            setError(error);\r\n          }\r\n        )\r\n    }, [])\r\n  \r\n    if (error) {\r\n      return <div>Error: {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n      return <div>Loading...</div>;\r\n    } else {\r\n      return (\r\n        <dl className=\"dictionary\">\r\n            {items.map((emoji, index) => {\r\n                return (\r\n                    <Entry\r\n                    key={index}\r\n                    emoji={emoji.character}\r\n                    name={emoji.unicodeName}\r\n                    />\r\n                );\r\n            })}\r\n        </dl>\r\n      );\r\n    }\r\n  }\r\n\r\n export default Emojipedia;","const apiKey = \"3b8f09be494325ff6081c1beb6d4aa3cb0e3c83e\";\r\n\r\nexport default apiKey;","import React from \"react\";\nimport Emojipedia from \"./Emojipedia\";\nimport Entry from \"./Entry\";\n\nfunction App() {\n  return (\n    <div>\n      <h1>\n        <span>emojipedia</span>\n      </h1>\n\n      <Emojipedia/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}